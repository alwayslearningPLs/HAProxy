global
  log /dev/log    local0
  log /dev/log    local1 notice
  stats timeout 30s

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull

  timeout connect 5000
  timeout client  50000
  timeout server  50000

  errorfile 400 /usr/local/etc/haproxy/errors/400.http
  errorfile 403 /usr/local/etc/haproxy/errors/403.http
  errorfile 408 /usr/local/etc/haproxy/errors/408.http
  errorfile 500 /usr/local/etc/haproxy/errors/500.http
  errorfile 502 /usr/local/etc/haproxy/errors/502.http
  errorfile 503 /usr/local/etc/haproxy/errors/503.http
  errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend api_gateway
# ssl-min-ver is the same as the defauls in global section. Possible values are: SSLv3, TLSv1.0, TLSv1.1, TLSv1.2, TLSv1.3
# We can also append "ciphers ${ssl-default-bind-ciphers}"
  bind :443 ssl crt /usr/local/etc/haproxy/ssl/cert_key.pem ssl-min-ver TLSv1.2
# this litterally means: If you are not using https, I'm going to redirect you
  http-request redirect scheme https unless { ssl_fc }
  use_backend be_hello if { path_beg -i /hello }
  use_backend be_bye if { path_beg -i /bye }

backend be_hello
  server s1 hello:80 check maxconn 20

# If we append the ssl keyword at the end of the server definition line, we will re-encrypt the content 
backend be_bye
  server s2 bye:80 check maxconn 20
